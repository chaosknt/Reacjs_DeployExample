{"version":3,"sources":["Excel/Helpers/types.js","Excel/Helpers/MakeColumns.js","Excel/Helpers/HookExcelReader.js","Excel/Excel.js","App.js","index.js"],"names":["map","x","join","make_cols","refstr","o","C","XLSX","utils","decode_range","e","c","i","name","encode_col","key","HookExcelReader","useState","listOneKey","listTwoKey","listNames","setListNames","display","message","setDisplay","file","data","cols","setData","listOne","listTwo","dataUploaded","setDataUploaded","equal","notEqual","missingInListTwoFromListOne","missingInListOneFromListTwo","dataCounted","setDataCounted","useEffect","handleFile","reader","FileReader","rABS","readAsBinaryString","onload","bstr","target","result","wb","read","type","bookVBA","wsname","SheetNames","ws","Sheets","dataReaded","sheet_to_json","handleCountData","readAsArrayBuffer","error","console","log","forEach","element","push","filter","undefined","reduce","prev","cur","Object","entries","sort","a","b","_sortedObj","k","v","notEqualResult","equalResult","keys","amountListOne","amountListTwo","className","id","accept","SheetJSFT","onChange","files","value","onClick","scope","length","colSpan","Excel","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ceebd33.chunk.js","sourcesContent":["const SheetJSFT = [\n\t\"xlsx\", \"xlsb\", \"xlsm\", \"xls\", \"xml\", \"csv\", \"txt\", \"ods\", \"fods\", \"uos\", \"sylk\", \"dif\", \"dbf\", \"prn\", \"qpw\", \"123\", \"wb*\", \"wq*\", \"html\", \"htm\"\n].map(function(x) { return \".\" + x; }).join(\",\");","import XLSX from 'xlsx';\n/* generate an array of column objects */\nexport const make_cols = refstr => {\n\tlet o = [], C = XLSX.utils.decode_range(refstr).e.c + 1;\t\t\n\tfor(var i = 0; i < C; ++i) o[i] = {name:XLSX.utils.encode_col(i), key:i}\t\t\t\n\treturn o;\n};","import React, { useEffect, useState } from 'react';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport XLSX from 'xlsx';\nimport { make_cols } from './MakeColumns';\nimport { SheetJSFT } from './types';\n\nconst HookExcelReader = () => {\n\n    const [listNames, setListNames] = useState({\n        listOneKey:'listOne',\n        listTwoKey:'listTwo'\n    })\n\n    const {listOneKey, listTwoKey} = listNames;\n\n\n    const [display, setDisplay] = useState({\n        display: false,\n        message: 'Display'\n    })\n\n    const [data, setData] = useState({\n\n        file: {},\n        data: [],\n        cols: []\n    })\n    \n    const [dataUploaded, setDataUploaded] = useState({\n        listOne: [],\n        listTwo: [],\n    })\n\n    const {listOne, listTwo} = dataUploaded\n\n    const [dataCounted, setDataCounted] = useState({\n        equal: {},\n        notEqual: {},\n        missingInListTwoFromListOne:{},\n        missingInListOneFromListTwo:{}\n    })\n\n    const {equal, notEqual, missingInListTwoFromListOne, missingInListOneFromListTwo} = dataCounted\n\n    useEffect(() => {\n        handleFile();\n      },[data]);\n\n   const handleChange = (e) => {\n        const files = e.target.files;\n        if (files && files[0]) setData({...data, file: files[0] });        \n    }\n   \n    const handleFile = (e) => {\n       \n        try {\n            \n            const reader = new FileReader();\n        const rABS = !!reader.readAsBinaryString;\n \n        reader.onload = (e) => {\n        \n            const bstr = e.target.result;\n            const wb = XLSX.read(bstr, { type: rABS ? 'binary' : 'array', bookVBA : true });\n            \n            const wsname = wb.SheetNames[0];\n            const ws = wb.Sheets[wsname];\n            \n            const dataReaded = XLSX.utils.sheet_to_json(ws);    \n                        \n            setData( { ...data, data: dataReaded, cols: make_cols(ws['!ref']) } );  \n\n            handleCountData();\n        };\n        \n        if (rABS) {\n            reader.readAsBinaryString(data.file);       \n        } else {\n            reader.readAsArrayBuffer(data.file);\n        };\n\n        } catch (error) {\n            console.log(error);\n        }\n        \n         \n    }\n\n    const handleCountData = () => {\n\n        let listOne = [];\n        let listTwo = []\n        data.data.forEach(element => {\n            listOne.push(element[listOneKey])\n            listTwo.push(element[listTwoKey])\n        });\n\n        setDataUploaded({...dataUploaded,\n            listOne:listOne,\n            listTwo: listTwo\n        })\n\n        listOne = listOne.filter(x => x != undefined)\n        listTwo = listTwo.filter(x => x != undefined)\n\n        listOne = listOne.reduce((prev, cur) => ((prev[cur] = prev[cur] + 1 || 1), prev), {})\n        listTwo = listTwo.reduce((prev, cur) => ((prev[cur] = prev[cur] + 1 || 1), prev), {})\n\n        listOne = Object\n        .entries(listOne)\n        .sort((a, b) => a[1] - b[1])\n        .reduce((_sortedObj, [k,v]) => ({\n          ..._sortedObj, \n          [k]: v\n        }), {})\n\n        listTwo = Object\n        .entries(listTwo)\n        .sort((a, b) => a[1] - b[1])\n        .reduce((_sortedObj, [k,v]) => ({\n          ..._sortedObj, \n          [k]: v\n        }), {})\n\n        let missingInListTwoFromListOne = [];\n        let missingInListOneFromListTwo = [];\n        let notEqual = []\n        let equal = []\n        let notEqualResult = []\n        let equalResult = []\n\n        Object.keys(listOne).forEach(element => {\n            \n            if(!listTwo[element]){\n                missingInListTwoFromListOne.push(element)\n            }\n\n            if(listOne[element] && listTwo[element] && (listOne[element] != listTwo[element])){\n                notEqual.push(element)\n            }\n\n            if(listOne[element] && listTwo[element] && (listOne[element] == listTwo[element])){\n                equal.push(element)\n            }\n\n        });\n\n        Object.keys(listTwo).forEach(element => {\n            \n            if(!listOne[element]){\n                missingInListOneFromListTwo.push(element)\n            }\n        });\n\n\n        notEqual.forEach(element => {\n            notEqualResult.push({\n                key:element,\n                amountListOne: listOne[element],\n                amountListTwo: listTwo[element],\n            })\n        });\n\n        equal.forEach(element => {\n            equalResult.push({\n                key:element,\n                amountListOne: listOne[element],\n                amountListTwo: listTwo[element],\n            })\n        });\n\n        setDataCounted({...dataCounted, \n                            equal: equalResult, \n                            notEqual: notEqualResult, \n                            missingInListTwoFromListOne: missingInListTwoFromListOne,\n                            missingInListOneFromListTwo: missingInListOneFromListTwo \n                        });\n\n    }\n\n    // const handleCountData = () => {\n\n    //     let listOne = [];\n    //     let listTwo = []\n    //     data.data.forEach(element => {\n    //         listOne.push(element.listOne)\n    //         listTwo.push(element.listTwo)\n    //     });\n\n    //     setDataUploaded({...dataUploaded,\n    //         listOne:listOne,\n    //         listTwo: listTwo\n    //     })\n\n    //     listOne = listOne.filter(x => x != undefined)\n    //     listTwo = listTwo.filter(x => x != undefined)\n\n    //     listOne = listOne.reduce((prev, cur) => ((prev[cur] = prev[cur] + 1 || 1), prev), {})\n    //     listTwo = listTwo.reduce((prev, cur) => ((prev[cur] = prev[cur] + 1 || 1), prev), {})\n\n    //     listOne = Object\n    //     .entries(listOne)\n    //     .sort((a, b) => a[1] - b[1])\n    //     .reduce((_sortedObj, [k,v]) => ({\n    //       ..._sortedObj, \n    //       [k]: v\n    //     }), {})\n\n    //     listTwo = Object\n    //     .entries(listTwo)\n    //     .sort((a, b) => a[1] - b[1])\n    //     .reduce((_sortedObj, [k,v]) => ({\n    //       ..._sortedObj, \n    //       [k]: v\n    //     }), {})\n\n    //     let missingInListTwoFromListOne = [];\n    //     let missingInListOneFromListTwo = [];\n    //     let notEqual = []\n    //     let equal = []\n    //     let notEqualResult = []\n    //     let equalResult = []\n\n    //     Object.keys(listOne).forEach(element => {\n            \n    //         if(!listTwo[element]){\n    //             missingInListTwoFromListOne.push(element)\n    //         }\n\n    //         if(listOne[element] && listTwo[element] && (listOne[element] != listTwo[element])){\n    //             notEqual.push(element)\n    //         }\n\n    //         if(listOne[element] && listTwo[element] && (listOne[element] == listTwo[element])){\n    //             equal.push(element)\n    //         }\n\n    //     });\n\n    //     Object.keys(listTwo).forEach(element => {\n            \n    //         if(!listOne[element]){\n    //             missingInListOneFromListTwo.push(element)\n    //         }\n    //     });\n\n\n    //     notEqual.forEach(element => {\n    //         notEqualResult.push({\n    //             key:element,\n    //             amountListOne: listOne[element],\n    //             amountListTwo: listTwo[element],\n    //         })\n    //     });\n\n    //     equal.forEach(element => {\n    //         equalResult.push({\n    //             key:element,\n    //             amountListOne: listOne[element],\n    //             amountListTwo: listTwo[element],\n    //         })\n    //     });\n\n    //     setDataCounted({...dataCounted, \n    //                         equal: equalResult, \n    //                         notEqual: notEqualResult, \n    //                         missingInListTwoFromListOne: missingInListTwoFromListOne,\n    //                         missingInListOneFromListTwo: missingInListOneFromListTwo \n    //                     });\n\n    // }\n\n    return (\n        <div className='ml-5'>\n            <h1 className='mt-5'>Count values between lists </h1>\n            <p>The file must cointains two lists named  <strong>listOne</strong> and <strong>listTwo</strong></p>\n            <div className='d-flex '>\n                <div className='col-lg-4'>\n                    <input type=\"file\" className=\"form-control\" id=\"file\" accept={SheetJSFT} onChange={handleChange} />\n                </div>\n\n                \n            </div>\n\n            <div className='mt-5 d-none'>\n                <p className=''>\n                    <label>List one</label>\n                    <input type=\"text\" className=\"form-control col-lg-2\" value={listOneKey} onChange={(e) => setListNames({...listNames,listOneKey:e.target.value })} />\n                </p>\n                <p className='mt-2'>\n                    <label>List one</label>\n                    <input type=\"text\" className=\"form-control col-lg-2\" value={listTwoKey} onChange={(e) => setListNames({...listNames,listTwoKey:e.target.value })}/>\n                </p>\n            </div>\n\n            <div className='col-lg-12 mt-5'>\n                <h3 className='mt-5 mb-3'>Uploaded Items</h3>\n                <button className='btn btn-info' onClick={() => setDisplay({...display, display: !display.display, message: !display.display ? 'Hide' : 'Display' })}>{display.message}</button>\n                \n                {display.display &&\n\n                    <div className='row'>\n                    <div className='col-lg-5  text-center'>\n                        <h4>List One</h4>\n                        <table className=\"table table-striped table-bordered\">\n                        <thead>\n                            <tr className='text-center '>\n                                <th scope=\"col\">Key</th>\n                            </tr>\n                        </thead>\n                            <tbody>\n                                {listOne.length > 0 ?\n                                    listOne.map((e, i) => (\n                                        <tr className='text-center'>\n                                            <td>{e}</td>\n                                        </tr>\n                                    )) : <tr></tr>\n                                }\n                            </tbody>\n                        </table>\n\n                    </div>\n\n                    <div className='col-lg-5  text-center'>\n                        <h4>List One</h4>\n                        <table className=\"table table-striped table-bordered\">\n                        <thead>\n                            <tr className='text-center '>\n                                <th scope=\"col\">Key</th>\n                            </tr>\n                        </thead>\n                            <tbody>\n                                {listTwo.length > 0 ?\n                                    listTwo.map((e, i) => (\n                                        <tr className='text-center'>\n                                            <td>{e}</td>\n                                        </tr>\n                                    )) : <tr></tr>\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n                    </div>\n                }\n                \n            </div>\n\n            <div className='col-lg-12  mt-5 mb-5'>\n                <h3>Summary</h3>\n                <div className='row'>\n                    <div className='col-lg-5 text-center'>\n                        <h3>Result</h3>\n                        <table className=\"table table-striped table-bordered\">\n                        <thead>\n                            <tr className='text-center '>\n                                <th scope=\"col\">Key</th>\n                                <th scope=\"col\">Amount List One</th>\n                                <th scope=\"col\">Amount List Two</th>\n                            </tr>\n                        </thead>\n                            <tbody>\n                                {notEqual.length > 0 ?\n                                    notEqual.map((e, i) => (\n                                        <tr className='text-center text-danger'>\n                                            <td>{e.key}</td>\n                                            <td>{e.amountListOne}</td>\n                                            <td>{e.amountListTwo}</td>\n                                        </tr>\n                                    )) : <tr><td  colSpan={3}>No data found</td></tr>\n                                }\n\n                                {equal.length > 0 ?\n                                    equal.map((e, i) => (\n                                        <tr className='text-center  text-success'>\n                                            <td>{e.key}</td>\n                                            <td>{e.amountListOne}</td>\n                                            <td>{e.amountListTwo}</td>\n                                        </tr>\n                                    )) : ''\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <div className='col-lg-3  text-center'>\n                        <h3>Missing in List Two (from List one)</h3>\n                        <table className=\"table table-striped table-bordered\">\n                        <thead>\n                            <tr className='text-center '>\n                                <th scope=\"col\">Key</th>\n                            </tr>\n                        </thead>\n                            <tbody>\n                                {missingInListTwoFromListOne.length > 0 ?\n                                    missingInListTwoFromListOne.map((e, i) => (\n                                        <tr className='text-center text-danger'>\n                                            <td>{e}</td>\n                                        </tr>\n                                    )) : <tr><td>no data found</td></tr>\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <div className='col-lg-3  text-center ml-3'>\n                        <h3>Missing in List One (From list Two)</h3>\n                        <table className=\"table table-striped table-bordered\">\n                        <thead>\n                            <tr className='text-center '>\n                                <th scope=\"col\">Key</th>\n                            </tr>\n                        </thead>\n                            <tbody>\n                                {missingInListOneFromListTwo.length > 0 ?\n                                    missingInListOneFromListTwo.map((e, i) => (\n                                        <tr className='text-center text-danger'>\n                                            <td>{e}</td>\n                                        </tr>\n                                    )) : <tr><td>No data found</td></tr>\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HookExcelReader\n","import HookExcelReader from './Helpers/HookExcelReader';\nconst Excel = () => {\n    \n    return (\n        <div>            \n            <HookExcelReader />\n        </div>\n    )\n}\n\nexport default Excel\n","import Excel from './Excel/Excel';\n\nfunction App() {\n  return (\n    <Excel />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\nReactDOM.render(\n  \n <App />,\n\ndocument.getElementById('root')\n);\n\n\n\n\n"],"sourceRoot":""}